apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: monolognator
  name: monolognator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monolognator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: '6060'
        prometheus.io/scrape: 'true'
      labels:
        app: monolognator
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - monolognator
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - env:
            - name: telegram_token
              valueFrom:
                secretKeyRef:
                  key: token
                  name: telegram-token
            - name: giphy_token
              valueFrom:
                secretKeyRef:
                  key: token
                  name: giphy-token
            - name: darksky_token
              valueFrom:
                secretKeyRef:
                  key: token
                  name: darksky-token
            - name: tenor_token
              valueFrom:
                secretKeyRef:
                  key: token
                  name: tenor-token
            - name: untappd_client_id
              valueFrom:
                secretKeyRef:
                  key: client-id
                  name: untappd
            - name: untappd_client_secret
              valueFrom:
                secretKeyRef:
                  key: client-secret
                  name: untappd
            - name: CN
              value: monolognator.brunix.net
          image: registry.hub.docker.com/jambock/monolognator
          imagePullPolicy: Always 
          name: monolognator
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: config
      restartPolicy: Always
      serviceAccountName: monolognator
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: config
          name: config
---
apiVersion: v1
imagePullSecrets:
  - name: docker
kind: ServiceAccount
metadata:
  labels:
    name: monolognator
  name: monolognator
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: monolognator
  name: monolognator
  namespace: default
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 8443 
  selector:
    app: monolognator
  sessionAffinity: None
  type: LoadBalancer 

